name: Deploy Tigerlily to ECR (dev)
on:
  push:
    branches: [feature/dev]
    #types: [ closed ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::043437012221:role/github_role
          role-session-name: TigerlilyFESessionDev
          aws-region: us-east-1
                          

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: tigerlily-fe-dev
          IMAGE_TAG: dev
        run: |
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy new image to ECS
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::043437012221:role/github_role
          role-session-name: TigerlilyFESessionDev
          aws-region: us-east-1

      - name: Update ECS task definition
        run: aws ecs update-service --cluster cann --service ecs-cann-service --force-new-deployment